{"ast":null,"code":"var _jsxFileName = \"/Users/adrianphuong/Desktop/Projects/Practice/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport Repositories from \"./Repositories\";\nimport Pagination from './Pagination';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [repositories, setRepositories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n  const searchRepositories = async () => {\n    // or const queryString = `q=${query}&sort=${sort}&order=${order}`;\n    if (username) {\n      setLoading(true);\n      const response = await axios.get('http://localhost:4000/api/searchusers', {\n        params: {\n          q: username\n        }\n      });\n      const items = response.data.items.filter(item => item.login.includes(username));\n      const repositoriesWithData = await Promise.all(items.map(async item => {\n        try {\n          const cachedData = localStorage.getItem(item.login);\n          if (cachedData) {\n            return JSON.parse(cachedData);\n          }\n          const repoCountResponse = await axios.get(item.repos_url, {\n            headers: {\n              Authorization: `token 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`\n            },\n            params: {\n              per_page: 100,\n              page: 1\n            }\n          });\n          if (repoCountResponse.status === 200) {\n            const repoCount = repoCountResponse.data.length;\n            const forksCount = repoCountResponse.data.filter(item => item.forks_count > 0).reduce((total, item) => total + item.forks_count, 0);\n            const languages = repoCountResponse.data.filter(item => item.language);\n            const languageCount = {};\n            for (item of languages) {\n              const l = item.language;\n              languageCount[l] = (languageCount[l] || 0) + 1;\n            }\n            const data = {\n              ...item,\n              repo_count: repoCount,\n              fork_count: forksCount,\n              languages: languageCount\n            };\n            localStorage.setItem(item.login, JSON.stringify(data));\n            return data;\n          }\n        } catch (error) {\n          console.error(`Error fetching repository count for ${item.login}:`, error);\n          return {\n            ...item,\n            repo_count: 'N/A'\n          };\n        }\n      }));\n      setRepositories(repositoriesWithData);\n      console.log(repositoriesWithData);\n      setLoading(false);\n    } else {\n      setRepositories([]);\n    }\n  };\n  const lastIndex = currentPage * postsPerPage;\n  const startIndex = lastIndex - postsPerPage;\n  const currentPosts = repositories.slice(startIndex, lastIndex);\n  const paginate = number => setCurrentPage(number);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-neutral-900 h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl text-center m-auto font-bold text-neutral-200 select-none pt-20\",\n      children: \"Learn about your own repositories.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container flex justify-center w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        className: \"w-1/3 border-2 rounded-xl block mt-5 bg-neutral-900 border-neutral-800 p-2 text-neutral-300\",\n        placeholder: \"Search...\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchRepositories,\n        className: \"Search mt-5 px-8 ml-2 block rounded-xl bg-neutral-800 text-neutral-200 hover:bg-neutral-700 transition-all\",\n        children: loading ? \"Loading...\" : \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      repositories: currentPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"results-found w-full text-center mt-3 text-neutral-500\",\n      children: [repositories.length, \" repositories found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: repositories.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xotf4ds0eavwQAOP5HMASObzZpM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Repositories","Pagination","axios","jsxDEV","_jsxDEV","App","_s","username","setUsername","repositories","setRepositories","loading","setLoading","currentPage","setCurrentPage","postsPerPage","searchRepositories","response","get","params","q","items","data","filter","item","login","includes","repositoriesWithData","Promise","all","map","cachedData","localStorage","getItem","JSON","parse","repoCountResponse","repos_url","headers","Authorization","per_page","page","status","repoCount","length","forksCount","forks_count","reduce","total","languages","language","languageCount","l","repo_count","fork_count","setItem","stringify","error","console","log","lastIndex","startIndex","currentPosts","slice","paginate","number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","placeholder","onChange","e","target","onClick","totalPosts","_c","$RefreshReg$"],"sources":["/Users/adrianphuong/Desktop/Projects/Practice/frontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {useState} from 'react'\nimport Repositories from \"./Repositories\";\nimport Pagination from './Pagination';\nimport axios from 'axios'\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(5);\n\n  const searchRepositories = async () => {\n    // or const queryString = `q=${query}&sort=${sort}&order=${order}`;\n    if(username) {\n      setLoading(true)\n      const response = await axios.get('http://localhost:4000/api/searchusers', {\n        params: {\n          q: username\n        }\n      });\n      const items = response.data.items.filter(item => item.login.includes(username))\n      const repositoriesWithData = await Promise.all(items.map(async (item) => {\n        try {\n          const cachedData = localStorage.getItem(item.login);\n          if (cachedData) {\n            return JSON.parse(cachedData);\n          }\n\n          const repoCountResponse = await axios.get(item.repos_url, {\n            headers: {\n              Authorization : `token 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`\n            },\n            params: {\n              per_page: 100,\n              page: 1\n            }\n          });\n          if (repoCountResponse.status === 200) {\n            \n            const repoCount = repoCountResponse.data.length;\n            const forksCount = repoCountResponse.data.filter(item => item.forks_count > 0).reduce((total, item) => total + item.forks_count, 0);\n            const languages = repoCountResponse.data.filter(item => item.language)\n            const languageCount = {}\n            for (item of languages) {\n              const l = item.language;\n              languageCount[l] = (languageCount[l] || 0) + 1;\n            }\n            const data = { ...item, repo_count: repoCount , fork_count: forksCount, languages: languageCount};\n            localStorage.setItem(item.login, JSON.stringify(data));\n            return data;\n          }\n        } catch (error) {\n          console.error(`Error fetching repository count for ${item.login}:`, error);\n          return { ...item, repo_count: 'N/A' };\n        }\n      }));\n      setRepositories(repositoriesWithData);\n      console.log(repositoriesWithData)\n      setLoading(false)\n    }\n    else {\n      setRepositories([]);\n    }\n  }\n\n  const lastIndex = currentPage * postsPerPage;\n  const startIndex = lastIndex - postsPerPage;\n  const currentPosts = repositories.slice(startIndex, lastIndex);\n\n  const paginate = (number) => setCurrentPage(number);\n\n  return (\n    <div className=\"w-full bg-neutral-900 h-screen\">\n      <h1 className=\"text-4xl text-center m-auto font-bold text-neutral-200 select-none pt-20\">Learn about your own repositories.</h1>\n      <div className=\"search-container flex justify-center w-full\">\n        <input type = \"text\" value = {username} className=\"w-1/3 border-2 rounded-xl block mt-5 bg-neutral-900 border-neutral-800 p-2 text-neutral-300\" placeholder=\"Search...\" onChange={(e) => setUsername(e.target.value)}></input>\n        <button onClick={searchRepositories}className=\"Search mt-5 px-8 ml-2 block rounded-xl bg-neutral-800 text-neutral-200 hover:bg-neutral-700 transition-all\">{loading ? \"Loading...\" : \"Search\"}</button>\n      </div>\n      <Repositories repositories={currentPosts}/>\n      <h2 className=\"results-found w-full text-center mt-3 text-neutral-500\">{repositories.length} repositories found.</h2>\n      <Pagination postsPerPage={postsPerPage} totalPosts={repositories.length} paginate={paginate} currentPage={currentPage}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAElC,MAAMiB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC;IACA,IAAGT,QAAQ,EAAE;MACXK,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMK,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,uCAAuC,EAAE;QACxEC,MAAM,EAAE;UACNC,CAAC,EAAEb;QACL;MACF,CAAC,CAAC;MACF,MAAMc,KAAK,GAAGJ,QAAQ,CAACK,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACnB,QAAQ,CAAC,CAAC;MAC/E,MAAMoB,oBAAoB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACR,KAAK,CAACS,GAAG,CAAC,MAAON,IAAI,IAAK;QACvE,IAAI;UACF,MAAMO,UAAU,GAAGC,YAAY,CAACC,OAAO,CAACT,IAAI,CAACC,KAAK,CAAC;UACnD,IAAIM,UAAU,EAAE;YACd,OAAOG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;UAC/B;UAEA,MAAMK,iBAAiB,GAAG,MAAMlC,KAAK,CAACgB,GAAG,CAACM,IAAI,CAACa,SAAS,EAAE;YACxDC,OAAO,EAAE;cACPC,aAAa,EAAG;YAClB,CAAC;YACDpB,MAAM,EAAE;cACNqB,QAAQ,EAAE,GAAG;cACbC,IAAI,EAAE;YACR;UACF,CAAC,CAAC;UACF,IAAIL,iBAAiB,CAACM,MAAM,KAAK,GAAG,EAAE;YAEpC,MAAMC,SAAS,GAAGP,iBAAiB,CAACd,IAAI,CAACsB,MAAM;YAC/C,MAAMC,UAAU,GAAGT,iBAAiB,CAACd,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACsB,WAAW,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,KAAK,EAAExB,IAAI,KAAKwB,KAAK,GAAGxB,IAAI,CAACsB,WAAW,EAAE,CAAC,CAAC;YACnI,MAAMG,SAAS,GAAGb,iBAAiB,CAACd,IAAI,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC0B,QAAQ,CAAC;YACtE,MAAMC,aAAa,GAAG,CAAC,CAAC;YACxB,KAAK3B,IAAI,IAAIyB,SAAS,EAAE;cACtB,MAAMG,CAAC,GAAG5B,IAAI,CAAC0B,QAAQ;cACvBC,aAAa,CAACC,CAAC,CAAC,GAAG,CAACD,aAAa,CAACC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAChD;YACA,MAAM9B,IAAI,GAAG;cAAE,GAAGE,IAAI;cAAE6B,UAAU,EAAEV,SAAS;cAAGW,UAAU,EAAET,UAAU;cAAEI,SAAS,EAAEE;YAAa,CAAC;YACjGnB,YAAY,CAACuB,OAAO,CAAC/B,IAAI,CAACC,KAAK,EAAES,IAAI,CAACsB,SAAS,CAAClC,IAAI,CAAC,CAAC;YACtD,OAAOA,IAAI;UACb;QACF,CAAC,CAAC,OAAOmC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uCAAuCjC,IAAI,CAACC,KAAK,GAAG,EAAEgC,KAAK,CAAC;UAC1E,OAAO;YAAE,GAAGjC,IAAI;YAAE6B,UAAU,EAAE;UAAM,CAAC;QACvC;MACF,CAAC,CAAC,CAAC;MACH3C,eAAe,CAACiB,oBAAoB,CAAC;MACrC+B,OAAO,CAACC,GAAG,CAAChC,oBAAoB,CAAC;MACjCf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MACI;MACHF,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,MAAMkD,SAAS,GAAG/C,WAAW,GAAGE,YAAY;EAC5C,MAAM8C,UAAU,GAAGD,SAAS,GAAG7C,YAAY;EAC3C,MAAM+C,YAAY,GAAGrD,YAAY,CAACsD,KAAK,CAACF,UAAU,EAAED,SAAS,CAAC;EAE9D,MAAMI,QAAQ,GAAIC,MAAM,IAAKnD,cAAc,CAACmD,MAAM,CAAC;EAEnD,oBACE7D,OAAA;IAAK8D,SAAS,EAAC,gCAAgC;IAAAC,QAAA,gBAC7C/D,OAAA;MAAI8D,SAAS,EAAC,0EAA0E;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChInE,OAAA;MAAK8D,SAAS,EAAC,6CAA6C;MAAAC,QAAA,gBAC1D/D,OAAA;QAAOoE,IAAI,EAAG,MAAM;QAACC,KAAK,EAAIlE,QAAS;QAAC2D,SAAS,EAAC,6FAA6F;QAACQ,WAAW,EAAC,WAAW;QAACC,QAAQ,EAAGC,CAAC,IAAKpE,WAAW,CAACoE,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9NnE,OAAA;QAAQ0E,OAAO,EAAE9D,kBAAmB;QAAAkD,SAAS,EAAC,4GAA4G;QAAAC,QAAA,EAAExD,OAAO,GAAG,YAAY,GAAG;MAAQ;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpM,CAAC,eACNnE,OAAA,CAACJ,YAAY;MAACS,YAAY,EAAEqD;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3CnE,OAAA;MAAI8D,SAAS,EAAC,wDAAwD;MAAAC,QAAA,GAAE1D,YAAY,CAACmC,MAAM,EAAC,sBAAoB;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrHnE,OAAA,CAACH,UAAU;MAACc,YAAY,EAAEA,YAAa;MAACgE,UAAU,EAAEtE,YAAY,CAACmC,MAAO;MAACoB,QAAQ,EAAEA,QAAS;MAACnD,WAAW,EAAEA;IAAY;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrH,CAAC;AAEV;AAACjE,EAAA,CAhFQD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}