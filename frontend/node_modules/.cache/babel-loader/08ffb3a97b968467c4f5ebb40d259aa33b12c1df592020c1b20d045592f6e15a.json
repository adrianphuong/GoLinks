{"ast":null,"code":"var _jsxFileName = \"/Users/adrianphuong/Desktop/Projects/Practice/frontend/src/Repositories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Repositories = ({\n  repositories\n}) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchRepositoryCounts = async () => {\n      try {\n        // Fetch repository count for each user\n        for (const repo of repositories) {\n          const response = await axios.get(repo.repos_url);\n          if (response.status === 200) {\n            repo.repo_count = response.data.length;\n          } else {\n            repo.repo_count = 'N/A';\n          }\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching repository counts:', error);\n        setLoading(false);\n      }\n    };\n    fetchRepositoryCounts();\n  }, [repositories]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"w-2/3 mt-5 m-auto bg-neutral-900 border-2 border-neutral-800 text-neutral-400 select-none p-8 rounded-lg\",\n    children: repositories.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"w-full border-2 cursor-pointer transition-all hover:text-neutral-300 mb-2 rounded-xl p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"font-bold\",\n        target: \"_blank\",\n        rel: \"noopener\",\n        children: [repo.login, \" - \", repo.repo_count !== undefined ? repo.repo_count : 'N/A', \" repositories\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Repositories, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = Repositories;\nexport default Repositories;\nvar _c;\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Repositories","repositories","_s","loading","setLoading","fetchRepositoryCounts","repo","response","get","repos_url","status","repo_count","data","length","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","target","rel","login","undefined","id","_c","$RefreshReg$"],"sources":["/Users/adrianphuong/Desktop/Projects/Practice/frontend/src/Repositories.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nexport const Repositories = ({repositories}) => {\n    const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchRepositoryCounts = async () => {\n      try {\n        // Fetch repository count for each user\n        for (const repo of repositories) {\n          const response = await axios.get(repo.repos_url);\n          if (response.status === 200) {\n            repo.repo_count = response.data.length;\n          } else {\n            repo.repo_count = 'N/A';\n          }\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching repository counts:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchRepositoryCounts();\n  }, [repositories]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <ul className=\"w-2/3 mt-5 m-auto bg-neutral-900 border-2 border-neutral-800 text-neutral-400 select-none p-8 rounded-lg\">\n        {repositories.map(repo => (\n        <li className='w-full border-2 cursor-pointer transition-all hover:text-neutral-300 mb-2 rounded-xl p-4' key={repo.id}>\n            <a className=\"font-bold\" target=\"_blank\" rel = 'noopener'>\n            {repo.login} - {repo.repo_count !== undefined ? repo.repo_count : 'N/A'} repositories\n            </a>\n        </li>\n        ))}\n  </ul>\n  )\n}\n\nexport default Repositories;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMS,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,KAAK,MAAMC,IAAI,IAAIL,YAAY,EAAE;UAC/B,MAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACF,IAAI,CAACG,SAAS,CAAC;UAChD,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;YAC3BJ,IAAI,CAACK,UAAU,GAAGJ,QAAQ,CAACK,IAAI,CAACC,MAAM;UACxC,CAAC,MAAM;YACLP,IAAI,CAACK,UAAU,GAAG,KAAK;UACzB;QACF;QACAP,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,IAAIE,OAAO,EAAE;IACX,oBAAOJ,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACErB,OAAA;IAAIsB,SAAS,EAAC,0GAA0G;IAAAL,QAAA,EACnHf,YAAY,CAACqB,GAAG,CAAChB,IAAI,iBACtBP,OAAA;MAAIsB,SAAS,EAAC,0FAA0F;MAAAL,QAAA,eACpGjB,OAAA;QAAGsB,SAAS,EAAC,WAAW;QAACE,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAG,UAAU;QAAAR,QAAA,GACxDV,IAAI,CAACmB,KAAK,EAAC,KAAG,EAACnB,IAAI,CAACK,UAAU,KAAKe,SAAS,GAAGpB,IAAI,CAACK,UAAU,GAAG,KAAK,EAAC,eACxE;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC,GAHsGd,IAAI,CAACqB,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjH,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEP,CAAC;AAAAlB,EAAA,CAxCYF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AA0CzB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}